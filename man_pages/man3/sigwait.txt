SIGWAIT(3)                 Linux Programmer's Manual                SIGWAIT(3)



NAME
       sigwait - wait for a signal

SYNOPSIS
       #include <signal.h>

        int sigwait(const sigset_t *set, int *sig);

   Feature Test Macro Requirements for glibc (see feature_test_macros(7)):

       sigwait(): _POSIX_C_SOURCE >= 1 || _XOPEN_SOURCE || _POSIX_SOURCE

DESCRIPTION
       The  sigwait()  function suspends execution of the calling thread until
       one of the signals specified in the signal  set  set  becomes  pending.
       The  function  accepts  the signal (removes it from the pending list of
       signals), and returns the signal number in sig.

       The operation of sigwait() is the same as sigwaitinfo(2), except that:

       * sigwait() returns only the signal number,  rather  than  a  siginfo_t
         structure describing the signal.

       * The return values of the two functions are different.

RETURN VALUE
       On success, sigwait() returns 0.  On error, it returns a positive error
       number (listed in ERRORS).

ERRORS
       EINVAL set contains an invalid signal number.

CONFORMING TO
       POSIX.1-2001.

NOTES
       sigwait() is implemented using sigtimedwait(2).

EXAMPLE
       See pthread_sigmask(3).

SEE ALSO
       sigaction(2),  signalfd(2),  sigpending(2),   sigsuspend(2),   sigwait‚Äê
       info(2), sigsetops(3), signal(7)

COLOPHON
       This  page  is  part of release 3.55 of the Linux man-pages project.  A
       description of the project, and information about reporting  bugs,  can
       be found at http://www.kernel.org/doc/man-pages/.



Linux                             2012-07-21                        SIGWAIT(3)
