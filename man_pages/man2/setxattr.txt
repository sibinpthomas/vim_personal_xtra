SETXATTR(2)                Linux Programmer's Manual               SETXATTR(2)



NAME
       setxattr, lsetxattr, fsetxattr - set an extended attribute value

SYNOPSIS
       #include <sys/types.h>
       #include <attr/xattr.h>

       int setxattr(const char *path, const char *name,
                     const void *value, size_t size, int flags);
       int lsetxattr(const char *path, const char *name,
                     const void *value, size_t size, int flags);
       int fsetxattr(int fd, const char *name,
                     const void *value, size_t size, int flags);

DESCRIPTION
       Extended attributes are name:value pairs associated with inodes (files,
       directories, symbolic links, etc.).  They are extensions to the  normal
       attributes  which  are  associated with all inodes in the system (i.e.,
       the stat(2) data).  A complete overview of extended attributes concepts
       can be found in attr(5).

       setxattr()  sets the value of the extended attribute identified by name
       and associated with the given path in the filesystem.  The size of  the
       value must be specified.

       lsetxattr()  is  identical  to setxattr(), except in the case of a sym‐
       bolic link, where the extended attribute is set on the link itself, not
       the file that it refers to.

       fsetxattr()  is identical to setxattr(), only the extended attribute is
       set on the open file referred to by fd  (as  returned  by  open(2))  in
       place of path.

       An  extended  attribute  name  is a simple null-terminated string.  The
       name includes a namespace prefix; there may be several, disjoint names‐
       paces  associated  with  an individual inode.  The value of an extended
       attribute is a chunk of arbitrary textual or binary data  of  specified
       length.

       The  flags  argument  can be used to refine the semantics of the opera‐
       tion.  XATTR_CREATE specifies a pure create, which fails if  the  named
       attribute exists already.  XATTR_REPLACE specifies a pure replace oper‐
       ation, which fails if the named attribute does not already  exist.   By
       default  (no flags), the extended attribute will be created if need be,
       or will simply replace the value if the attribute exists.

RETURN VALUE
       On success, zero is returned.  On failure, -1 is returned and errno  is
       set appropriately.

ERRORS
       EDQUOT Disk quota limits meant that there is insufficient space remain‐
              ing to store the extended attribute.

       EEXIST XATTR_CREATE was specified, and the attribute exists already.

       ENOATTR
              XATTR_REPLACE was specified, and the attribute does  not  exist.
              (ENOATTR   is   defined   to   be   a  synonym  for  ENODATA  in
              <attr/xattr.h>.)

       ENOSPC There is insufficient space  remaining  to  store  the  extended
              attribute.

       ENOTSUP
              Extended  attributes are not supported by the filesystem, or are
              disabled, errno is set to ENOTSUP.

       In addition, the errors documented in stat(2) can also occur.

VERSIONS
       These system calls have been available on Linux since kernel 2.4; glibc
       support is provided since version 2.3.

CONFORMING TO
       These system calls are Linux-specific.

SEE ALSO
       getfattr(1),  setfattr(1), getxattr(2), listxattr(2), open(2), removex‐
       attr(2), stat(2), attr(5), symlink(7)

COLOPHON
       This page is part of release 3.55 of the Linux  man-pages  project.   A
       description  of  the project, and information about reporting bugs, can
       be found at http://www.kernel.org/doc/man-pages/.



Linux                             2013-01-19                       SETXATTR(2)
