RENAMEAT(2)                Linux Programmer's Manual               RENAMEAT(2)



NAME
       renameat - rename a file relative to directory file descriptors

SYNOPSIS
       #include <fcntl.h> /* Definition of AT_* constants */
       #include <stdio.h>

       int renameat(int olddirfd, const char *oldpath,
                    int newdirfd, const char *newpath);

   Feature Test Macro Requirements for glibc (see feature_test_macros(7)):

       renameat():
           Since glibc 2.10:
               _XOPEN_SOURCE >= 700 || _POSIX_C_SOURCE >= 200809L
           Before glibc 2.10:
               _ATFILE_SOURCE

DESCRIPTION
       The  renameat()  system  call  operates  in  exactly  the  same  way as
       rename(2), except for the differences described in this manual page.

       If the pathname given in oldpath is relative, then  it  is  interpreted
       relative  to  the directory referred to by the file descriptor olddirfd
       (rather than relative to the current working directory of  the  calling
       process, as is done by rename(2) for a relative pathname).

       If oldpath is relative and olddirfd is the special value AT_FDCWD, then
       oldpath is interpreted relative to the current working directory of the
       calling process (like rename(2)).

       If oldpath is absolute, then olddirfd is ignored.

       The interpretation of newpath is as for oldpath, except that a relative
       pathname is interpreted relative to the directory referred  to  by  the
       file descriptor newdirfd.

RETURN VALUE
       On  success,  renameat() returns 0.  On error, -1 is returned and errno
       is set to indicate the error.

ERRORS
       The same errors that occur for rename(2) can also occur for renameat().
       The following additional errors can occur for renameat():

       EBADF  olddirfd or newdirfd is not a valid file descriptor.

       ENOTDIR
              oldpath  is relative and olddirfd is a file descriptor referring
              to a file other than a directory; or  similar  for  newpath  and
              newdirfd

VERSIONS
       renameat()  was  added  to  Linux in kernel 2.6.16; library support was
       added to glibc in version 2.4.

CONFORMING TO
       POSIX.1-2008.

NOTES
       See openat(2) for an explanation of the need for renameat().

SEE ALSO
       openat(2), rename(2), path_resolution(7)

COLOPHON
       This page is part of release 3.55 of the Linux  man-pages  project.   A
       description  of  the project, and information about reporting bugs, can
       be found at http://www.kernel.org/doc/man-pages/.



Linux                             2012-05-04                       RENAMEAT(2)
